package sudoku

import (
	"reflect"
	"testing"
)

func TestCandidates(t *testing.T) {
	type args struct {
		puzzle []int
	}
	tests := []struct {
		name string
		args args
		want [][]int
	}{
		{
			name: "valid",
			args: args{
				puzzle: []int{
					5, 3, 0, 0, 7, 0, 0, 0, 0,
					6, 0, 0, 1, 9, 5, 0, 0, 0,
					0, 9, 8, 0, 0, 0, 0, 6, 0,
					8, 0, 0, 0, 6, 0, 0, 0, 3,
					4, 0, 0, 8, 0, 3, 0, 0, 1,
					7, 0, 0, 0, 2, 0, 0, 0, 6,
					0, 6, 0, 0, 0, 0, 2, 8, 0,
					0, 0, 0, 4, 1, 9, 0, 0, 5,
					0, 0, 0, 0, 8, 0, 0, 7, 9,
				},
			},
			want: [][]int{
				{5}, {3}, {1, 2, 4}, {2, 6}, {7}, {2, 4, 6, 8}, {1, 4, 8, 9}, {1, 2, 4, 9}, {2, 4, 8},
				{6}, {2, 4, 7}, {2, 4, 7}, {1}, {9}, {5}, {3, 4, 7, 8}, {2, 3, 4}, {2, 4, 7, 8},
				{1, 2}, {9}, {8}, {2, 3}, {3, 4}, {2, 4}, {1, 3, 4, 5, 7}, {6}, {2, 4, 7},
				{8}, {1, 2, 5}, {1, 2, 5, 9}, {5, 7, 9}, {6}, {1, 4, 7}, {4, 5, 7, 9}, {2, 4, 5, 9}, {3},
				{4}, {2, 5}, {2, 5, 6, 9}, {8}, {5}, {3}, {5, 7, 9}, {2, 5, 9}, {1},
				{7}, {1, 5}, {1, 3, 5, 9}, {5, 9}, {2}, {1, 4}, {4, 5, 8, 9}, {4, 5, 9}, {6},
				{1, 3, 9}, {6}, {1, 3, 4, 5, 7, 9}, {3, 5, 7}, {3, 5}, {7}, {2}, {8}, {4},
				{2, 3}, {2, 7, 8}, {2, 3, 7}, {4}, {1}, {9}, {3, 6}, {3}, {5},
				{1, 2, 3}, {1, 2, 4, 5}, {1, 2, 3, 4, 5}, {2, 3, 5, 6}, {8}, {2, 6}, {1, 3, 4, 6}, {7}, {9},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := Candidates(tt.args.puzzle); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("Candidates() = %v, want %v", got, tt.want)
			}
		})
	}
}
